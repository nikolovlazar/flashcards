services:
  db:
    image: postgres:16
    container_name: db
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=flashcards
    ports:
      - '5432:5432'
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    container_name: api
    build:
      context: ./packages/api
      dockerfile: Dockerfile-dev
    ports:
      - '8000:8000'
    volumes:
      - ./packages/api:/app
    networks:
      - app-network
    environment:
      - SENTRY_DSN=https://6911a9fdc3d37038657636459208b56d@o4506044970565632.ingest.us.sentry.io/4508281601392645
      - DB_NAME=flashcards
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432

    depends_on:
      db:
        condition: service_healthy

  web:
    container_name: web
    build:
      context: ./packages/web
      dockerfile: Dockerfile-dev
    ports:
      - '3000:3000'
    volumes:
      - ./packages/web:/app
      - /app/node_modules
    environment:
      - PORT=3000
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    command: npm run dev
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
